version: '3.9'

services:
  postgres_db:
    image: postgres:15
    container_name: shop_postgres
    volumes:
      - ../shop_db:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "${DB_OUT_PORT}:${POSTGRES_PORT}"
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
        reservations:
          cpus: '0.01'
          memory: 128M
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 10s
      retries: 5

  web:
    build: .
    container_name: shop_app
    command: >
      bash -c "./manage.py migrate && ./manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - '127.0.0.1:8001:${DJANGO_APP_PORT}'
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
        reservations:
          cpus: '0.01'
          memory: 128M
    depends_on:
      postgres_db:
        condition: service_healthy

  redis:
    image: redis:alpine
    container_name: shop_broker
    volumes:
      - /redis_dump/:/var/lib/redis/
      - /redis_data/:/data/
    ports:
      - '63792:6379'

  celery_worker:
    restart: always
    build: .
    container_name: shop_celery_worker
    command: >
      bash -c "celery -A shop_project worker -l info"
    volumes:
      - .:/app
    depends_on:
      - redis
      - postgres_db
      - web

  celery_beat:
    build: .
    container_name: shop_celery_beat
    command: >
      bash -c "celery -A shop_project beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - .:/app
    depends_on:
      - redis
      - celery_worker
      - postgres_db
      - web

  tg_bot:
    build: .
    container_name: shop_tg_bot
    command: >
      bash -c "./manage.py bot"
    volumes:
      - .:/app
    depends_on:
      - postgres_db
      - web